1. Query the two cities in STATION with the shortest and longest CITY names, as well as their respective lengths (i.e.: number of characters in the   name). If there is more than one smallest or largest city, choose the one that comes first when ordered alphabetically.
   The STATION table is described as follows:
   
   
SOLUTION 1   
SELECT CITY, L_C FROM(
select * from (
SELECT CITY  , LENGTH(CITY)  AS L_C , ROW_NUMBER() OVER (ORDER BY CITY) as r_n
FROM STATION 
WHERE LENGTH(CITY)= (SELECT MIN(LENGTH(CITY)) FROM STATION))a where r_n=1 
UNION 
select * from (
SELECT CITY  , LENGTH(CITY)  AS L_C , ROW_NUMBER() OVER (ORDER BY CITY) as r_n
FROM STATION 
WHERE LENGTH(CITY)= (SELECT MAX(LENGTH(CITY)) FROM STATION))a where r_n=1)  ;   


SOLUTION 2
SELECT * FROM (
SELECT CITY  , LENGTH(CITY)
FROM STATION 
WHERE LENGTH(CITY)= (SELECT MIN(LENGTH(CITY)) FROM STATION) ORDER BY CITY)
WHERE ROWNUM<=1
UNION
SELECT * FROM (
SELECT CITY  , LENGTH(CITY)
FROM STATION 
WHERE LENGTH(CITY)= (SELECT MAX(LENGTH(CITY)) FROM STATION) ORDER BY CITY)
WHERE ROWNUM<=1;

====================================================================================================================

2. Query the list of CITY names starting with vowels (i.e., a, e, i, o, or u) from STATION. Your result cannot contain duplicates.


solution Mysql
SELECT DISTINCT CITY FROM STATION  WHERE SUBSTR(CITY,1,1) in ('a', 'e' , 'i' , 'o' ,'u');
solution Oracle
SELECT DISTINCT CITY FROM STATION  WHERE REGEXP_LIKE  (CITY, '^[aeiou]','i');

===============================================================================================================================

3. Query the list of CITY names ending with vowels (a, e, i, o, u) from STATION. Your result cannot contain duplicates.

*solution in Mysql
SELECT DISTINCT CITY FROM STATION  WHERE right(CITY,1)in ('a', 'e' , 'i' , 'o' ,'u')
*Solution in Oracle
SELECT DISTINCT CITY FROM STATION  WHERE REGEXP_LIKE  (CITY, '[aeiou]$','i');



4.Query the list of CITY names from STATION which have vowels (i.e., a, e, i, o, and u) as both their first and last characters. Your result cannot  contain duplicates. 


*Solution in Mysql
SELECT DISTINCT CITY FROM STATION  WHERE right(CITY,1)in ('a', 'e' , 'i' , 'o' ,'u') and SUBSTR(CITY,1,1) in ('a', 'e' , 'i' , 'o' ,'u');
*Solution in oracle
 SELECT DISTINCT CITY FROM STATION  WHERE REGEXP_LIKE  (CITY, '^[aeiou]','i') and REGEXP_LIKE  (CITY, '[aeiou]$','i');


5. Query the list of CITY names from STATION that do not start with vowels. Your result cannot contain duplicates.

* SELECT DISTINCT CITY FROM STATION  WHERE REGEXP_LIKE  (CITY, '^[^aeiou]','i');
* SELECT DISTINCT CITY FROM STATION  WHERE SUBSTR(CITY,1,1) not in ('a', 'e' , 'i' , 'o' ,'u');

6. Query the list of CITY names from STATION that do not end with vowels. Your result cannot contain duplicates.

*  SELECT DISTINCT CITY FROM STATION  WHERE REGEXP_LIKE  (CITY, '[^aeiou]$','i')


7. Query the list of CITY names from STATION that either do not start with vowels or do not end with vowels. Your result cannot contain duplicates.

*  SELECT DISTINCT CITY FROM STATION  WHERE REGEXP_LIKE  (CITY, '^[^aeiou]','i') and REGEXP_LIKE  (CITY, '[^aeiou]$','i');





8. Query the list of CITY names from STATION that either do not start with vowels or do not end with vowels. Your result cannot contain duplicates.

SELECT DISTINCT CITY FROM STATION  WHERE REGEXP_LIKE  (CITY, '^[^aeiou]','i') or REGEXP_LIKE  (CITY, '[^aeiou]$','i');


9. Query the Name of any student in STUDENTS who scored higher than  Marks 75. Order your output by the last three characters of each name. If two or more students both have names ending in the same last three characters (i.e.: Bobby, Robby, etc.), secondary sort them by ascending ID.

* select name from STUDENTS where marks>75 order by substr(NAME, -3),id;



10.Generate the following two result sets:

Query an alphabetically ordered list of all names in OCCUPATIONS, immediately followed by the first letter of each profession as a parenthetical (i.e.: enclosed in parentheses). For example: AnActorName(A), ADoctorName(D), AProfessorName(P), and ASingerName(S).
Query the number of ocurrences of each occupation in OCCUPATIONS. Sort the occurrences in ascending order, and output them in the following format:

11. Pivot the Occupation column in OCCUPATIONS so that each Name is sorted alphabetically and displayed underneath its corresponding Occupation. The output column headers should be Doctor, Professor, Singer, and Actor, respectively.

Note: Print NULL when there are no more names corresponding to an occupation.

SELECT Doctor, Professor, Singer, Actor FROM (
SELECT ROW_NUMBER() OVER (PARTITION BY occupation ORDER BY name) as rn, name, occupation FROM       occupations) 
PIVOT 
(MAX(name) FOR occupation IN ('Doctor' as Doctor,'Professor' as Professor, 'Singer' as Singer, 'Actor' as Actor)) 
ORDER BY rn;







